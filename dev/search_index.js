var documenterSearchIndex = {"docs":
[{"location":"references/#References","page":"References","title":"References","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"[1] Neal, R. (2000). Markov chain sampling methods for Dirichlet process mixture models. Journal of Computational and Graphical Statistics, 9(2). https://doi.org/10.1080/10618600.2000.10474879","category":"page"},{"location":"theory/","page":"-","title":"-","text":"Consider a DPM o in its so-called stick-breaking representation:","category":"page"},{"location":"theory/","page":"-","title":"-","text":"beginaligned\n    y_i  bmd bmtheta\n    stackreltexttiny it indsim\n    q(cdot  theta_d_i)\n    \n    d_i  bmw\n    stackreltexttiny it iidsim\n    textCategorical(bmw)\n    \n    forall i\n    in\n    mathcalN equiv 1 ldots N\n    \n    w_j\n    = \n    v_j prodnolimits_z  j (1 - v_z)\n    \n    forall j\n    in\n    mathbbN\n    \n    v_j\n    stackreltexttiny it iidsim\n    textBeta(1 alpha)\n    \n    theta_j\n    stackreltexttiny it iidsim\n    g_0(cdot)\nendaligned","category":"page"},{"location":"theory/","page":"-","title":"-","text":"","category":"page"},{"location":"theory/","page":"-","title":"-","text":"Modules = [DPMNeal3]","category":"page"},{"location":"theory/#DPMNeal3.GenericBlock","page":"-","title":"DPMNeal3.GenericBlock","text":"GenericBlock(rng::AbstractRNG, N::Int; K0::Int = 1, αa0 = 2.0, αb0 = 4.0)\n\nInitialize the generic block of a DPM with N observations, K0 initial  clusters and a Gamma prior distribution (with shape αa0 and rate αb0)  for the DP concentration parameter.\n\n\n\n\n\n","category":"type"},{"location":"theory/#DPMNeal3.active_clusters-Tuple{AbstractDPM}","page":"-","title":"DPMNeal3.active_clusters","text":"active_clusters(m::AbstractDPM)\n\nReturn the set of active clusters.\n\n\n\n\n\n","category":"method"},{"location":"theory/#DPMNeal3.cluster_labels-Tuple{AbstractDPM}","page":"-","title":"DPMNeal3.cluster_labels","text":"cluster_labels(m::AbstractDPM)\n\nReturn the cluster labels.\n\n\n\n\n\n","category":"method"},{"location":"theory/#DPMNeal3.cluster_sizes-Tuple{AbstractDPM}","page":"-","title":"DPMNeal3.cluster_sizes","text":"cluster_sizes(m::AbstractDPM)\n\nReturn the cluster sizes.\n\n\n\n\n\n","category":"method"},{"location":"theory/#DPMNeal3.dp_mass-Tuple{AbstractDPM}","page":"-","title":"DPMNeal3.dp_mass","text":"dp_mass(m::AbstractDPM)\n\nReturn the current DP concentration parameter.\n\n\n\n\n\n","category":"method"},{"location":"theory/#DPMNeal3.logpredlik-Tuple{Any, GenericBlock, Any, Any, Any}","page":"-","title":"DPMNeal3.logpredlik","text":"logpredlik(sb, gb::GenericBlock, data, i, k)\n\nReturn log(y_i  y_-i d_i = k d_-i). \n\n\n\n\n\n","category":"method"},{"location":"theory/#DPMNeal3.n_clusters-Tuple{AbstractDPM}","page":"-","title":"DPMNeal3.n_clusters","text":"n_clusters(m::AbstractDPM)\n\nReturn the number of active clusters.\n\n\n\n\n\n","category":"method"},{"location":"theory/","page":"-","title":"-","text":"<!– push!(LOAD_PATH,\"../src/\") rm -rf build; julia make.jl –>","category":"page"},{"location":"create/#Create-new-DPM-models","page":"Create new DPM models","title":"Create new DPM models","text":"","category":"section"},{"location":"start/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"start/#Installation","page":"Getting Started","title":"Installation","text":"","category":"section"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"Install with the Julia package manager Pkg:","category":"page"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"# Press ']' to enter the Pkg REPL mode.\npkg> add DPMNeal3","category":"page"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"or","category":"page"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"julia> using Pkg; \njulia> Pkg.add(\"DPMNeal3\")","category":"page"},{"location":"start/#Initializing-a-Normal-DPM","page":"Getting Started","title":"Initializing a Normal DPM","text":"","category":"section"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"Let us initialize a Normal DPM.","category":"page"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"The first step is to set up the environment:","category":"page"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"julia> using Random, DPMNeal3\njulia> rng = MersenneTwister(1)","category":"page"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"Then, we create a Normal DPM using DPM():","category":"page"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"julia> m = DPM(rng, NormalNIG())","category":"page"},{"location":"start/#Performing-a-Gibbs-update","page":"Getting Started","title":"Performing a Gibbs update","text":"","category":"section"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"In order to perform a Gibbs update, we need a training sample, e.g.","category":"page"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"julia> data = randn(1000)","category":"page"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"Given this sample, we can perform a Gibbs update as follows:","category":"page"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"julia> update!(rng, m, data)","category":"page"},{"location":"start/#Accesing-the-state-of-the-chain","page":"Getting Started","title":"Accesing the state of the chain","text":"","category":"section"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"Once m have been updated, we can inspect the current state of the chain using the following accessors:","category":"page"},{"location":"start/","page":"Getting Started","title":"Getting Started","text":"n_clusters(m)      # return the number of active clusters\nactive_clusters(m) # return the active clusters\ncluster_labels(m)  # return the cluster labels\ncluster_sizes(m)   # return the cluster sizes\ndp_mass(m)         # return the DP mass parameter","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = DPMNeal3","category":"page"},{"location":"#DPMNeal3","page":"Home","title":"DPMNeal3","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"DPMNeal3 provides an interface for Dirichlet process mixture (DPM) models in Julia using Neal's algorithm 3 [1].","category":"page"}]
}
